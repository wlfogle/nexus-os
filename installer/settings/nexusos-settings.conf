# NexusOS Calamares Installer Configuration
# ZFS as Default Filesystem
#
# SPDX-FileCopyrightText: no
# SPDX-License-Identifier: CC0-1.0
#
# Configuration file for Calamares installer for NexusOS
# Based on the enhanced ZFS integration for maximum performance and reliability

---
# Modules can be job modules (with different interfaces) and QtWidgets view
# modules. They could all be placed in a number of different paths.
# "modules-search" is a list of strings, each of these can either be a full
# path to a directory or the keyword "local".
#
# "local" means:
#   - modules in $LIBDIR/calamares/modules, with
#   - settings in SHARE/calamares/modules or /etc/calamares/modules.
# In debug-mode (e.g. calamares -d) "local" also adds some paths
# that make sense from inside the build-directory of Calamares.
#
# Strings other than "local" are taken as paths. This allows configuring
# where to look for modules, contributions or forks of Calamares.

modules-search: [ local ]

# Instances section. This section is optional, and it defines custom instances
# for modules of any kind. An instance entry has these keys:
# - *module* name, which matches the module name from the module descriptor
#   (usually the name of the directory under `modules/`, but see also the
#   module descriptor)
# - *id* (optional) an identifier to distinguish this instance from
#   the primary instance (which always exists) or other instances.
# - *config* (optional) a filename for the configuration. If none is given,
#   the instance gets the same configuration as the primary instance.
#   If an absolute path is given, then that path is used directly;
#   otherwise, the file is looked up in the usual configuration
#   directories as `<config>.conf`.
# - *weight* (optional) In the *exec* phase of the sequence, progress
#   is reported as jobs are completed. The jobs from a heavier instance
#   contribute more to the overall progress value. By default, all jobs
#   from an instance have weight 1. This setting changes that weight.
#
# The primary instance of any module is always available and always
# has the instance id and module name the same.
#
# An example of instances section:
instances:
- id:       nexusrootfs
  module:   unpackfs
  config:   nexusrootfs.conf
  weight:   1

- id:       nexuskernel  
  module:   unpackfs
  config:   nexuskernel.conf
  weight:   1

# Sequence section. This section describes the sequence of modules, both
# viewmodules (to be shown) and jobmodules (to be executed). A 'viewmodules'
# entry can have the following keys:
#   - *show* is a list of modules (view modules) to show. Entries can optionally
#     be given as maps with *module* and *id* keys instead of a string, if you
#     want to specify an instance (see the instances section above)
#   - *exec* is a list of modules (job modules) to execute. Again, can optionally
#     be given as maps with *module* and *id* keys to specify a module instance.

sequence:
- show:
  # Welcome screen with NexusOS branding
  - welcome
  # Locale and keyboard selection
  - locale
  # Keyboard layout selection  
  - keyboard
  # Partitioning - ZFS optimized
  - partition
  # User account creation
  - users
  # Summary before installation
  - summary
  exec:
  # Partition setup for ZFS
  - partition
  # Create ZFS pools and datasets
  - zfs
  # Mount ZFS filesystems
  - mount
- show:
  # Installation progress
  - finished
  exec:
  # Unpack NexusOS root filesystem
  - nexusrootfs
  # Unpack NexusOS kernel and modules
  - nexuskernel
  # Configure locale settings
  - locale
  # Configure keyboard layout
  - keyboard  
  # Configure network settings
  - networkcfg
  # Configure system clock
  - hwclock
  # Generate /etc/fstab with ZFS entries
  - fstab
  # Copy ZFS hostid for proper pool identification
  - zfshostid
  # Configure users and passwords
  - users
  # Display manager configuration (if applicable)
  - displaymanager
  # Configure network manager
  - networkcfg
  # Generate SSH host keys
  - services-systemd
  # Post-installation ZFS configuration
  - zfspostcfg
  # Configure package manager
  - packages
  # Generate initramfs with ZFS support
  - initramfscfg
  # Install and configure GRUB with ZFS support
  - grubcfg
  # Final system cleanup
  - removeuser

# A branding component is a directory, either in SHARE/calamares/branding or
# in /etc/calamares/branding (the latter takes precedence). The directory must
# contain a YAML file branding.desc which may reference additional resources
# (such as images) as paths relative to the current directory.

branding: nexusos

# If this is set to true, Calamares will show an "Are you sure?" prompt right
# before each execution phase, i.e. at points of no return. If this is false,
# no prompt is shown. Default is false, but Calamares will complain if this
# is not explicitly set.

prompt-install: true

# If this is set to true, Calamares will execute all target environment
# commands in the current environment, without chroot. This setting should
# only be used when setting up Calamares as a post-install configuration tool,
# as opposed to a system installer.

dont-chroot: false

# If this is set to true, Calamares refers to itself as a "setup program"
# rather than an "installer". Defaults to the value of dont-chroot, but
# Calamares will complain if this is not explicitly set.

oem-setup: false

# If this is set to true, the "Cancel" button will be disabled entirely.
# The button is also hidden from view.

disable-cancel: false

# If this is set to true, the "Cancel" button will be disabled once
# you start the installation process.

disable-cancel-during-exec: false

# If this is set to true, the "Next" and "Back" button will be hidden entirely.
# The buttons are also disabled, so you can't go back and forth between pages.
# This is useful in OEM setups where you want a completely automatic install.

hide-back-and-next-during-exec: false

# If this is set to true, then once the end of the sequence has
# been reached, the quit (done) button is clicked automatically
# and Calamares will close. Default is false: the user will see
# the last page of the sequence (which should probably be a
# 'finished' viewmodule) and will have to close the installer manually.

quit-at-end: false